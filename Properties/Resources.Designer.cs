//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Road_Lap1.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Road_Lap1.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap CarRoad {
            get {
                object obj = ResourceManager.GetObject("CarRoad", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;!DOCTYPE html&gt;
        ///&lt;html lang=&quot;en&quot; xmlns:th=&quot;http://thymeleaf.org&quot;&gt;
        ///&lt;head&gt;
        ///    &lt;meta charset=&quot;UTF-8&quot;&gt;
        ///    &lt;title&gt;Настройка количества полос&lt;/title&gt;
        ///&lt;/head&gt;
        ///
        ///&lt;style&gt;
        ///    body {
        ///        margin: 0; /* Убираем отступы */
        ///    }
        ///    .parent {
        ///        /*margin: 20%;  Отступы вокруг элемента */
        ///        /*background: #fd0;  Цвет фона */
        ///        padding: 10px; /* Поля вокруг текста */
        ///        /*width: 30%
        ///        width: 150px;
        ///        height: 300px;*/
        ///        width: 910px;
        ///    }
        ///    .child {
        ///        [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string countOfRoadsInfo {
            get {
                return ResourceManager.GetString("countOfRoadsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Cross {
            get {
                object obj = ResourceManager.GetObject("Cross", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;!DOCTYPE html&gt;
        ///&lt;html lang=&quot;en&quot; xmlns:th=&quot;http://thymeleaf.org&quot;&gt;
        ///&lt;head&gt;
        ///    &lt;meta charset=&quot;UTF-8&quot;&gt;
        ///    &lt;title&gt;Настройка интенсивности потока&lt;/title&gt;
        ///&lt;/head&gt;
        ///
        ///&lt;style&gt;
        ///    body {
        ///        margin: 0; /* Убираем отступы */
        ///    }
        ///    .parent {
        ///        /*margin: 20%;  Отступы вокруг элемента */
        ///        /*background: #fd0;  Цвет фона */
        ///        padding: 10px; /* Поля вокруг текста */
        ///        /*width: 30%
        ///        width: 150px;
        ///        height: 300px;*/
        ///        width: 910px;
        ///    }
        ///    .child {
        ///    [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string flowIntensitySettings {
            get {
                return ResourceManager.GetString("flowIntensitySettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap GreenSemaphore {
            get {
                object obj = ResourceManager.GetObject("GreenSemaphore", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Highway {
            get {
                object obj = ResourceManager.GetObject("Highway", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Highway1 {
            get {
                object obj = ResourceManager.GetObject("Highway1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Limit {
            get {
                object obj = ResourceManager.GetObject("Limit", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;!DOCTYPE html&gt;
        ///&lt;html lang=&quot;en&quot; xmlns:th=&quot;http://thymeleaf.org&quot;&gt;
        ///&lt;head&gt;
        ///    &lt;meta charset=&quot;UTF-8&quot;&gt;
        ///    &lt;title&gt;Меню&lt;/title&gt;
        ///&lt;/head&gt;
        ///
        ///&lt;style&gt;
        ///    body {
        ///        margin: 0; /* Убираем отступы */
        ///    }
        ///    .parent {
        ///        /*margin: 20%;  Отступы вокруг элемента */
        ///        /*background: #fd0;  Цвет фона */
        ///        padding: 10px; /* Поля вокруг текста */
        ///        /*width: 30%
        ///        width: 150px;
        ///        height: 300px;*/
        ///        width: 910px;
        ///    }
        ///    .child {
        ///         /*border: 2px solid  [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string managingTheMainForm {
            get {
                return ResourceManager.GetString("managingTheMainForm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap NoLimit {
            get {
                object obj = ResourceManager.GetObject("NoLimit", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap RedSemaphore {
            get {
                object obj = ResourceManager.GetObject("RedSemaphore", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap RefSubsystem {
            get {
                object obj = ResourceManager.GetObject("RefSubsystem", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Road {
            get {
                object obj = ResourceManager.GetObject("Road", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;!DOCTYPE html&gt;
        ///&lt;html lang=&quot;en&quot; xmlns:th=&quot;http://thymeleaf.org&quot;&gt;
        ///&lt;head&gt;
        ///    &lt;meta charset=&quot;UTF-8&quot;&gt;
        ///    &lt;title&gt;Настройки типа дороги&lt;/title&gt;
        ///&lt;/head&gt;
        ///
        ///&lt;style&gt;
        ///    body {
        ///        margin: 0; /* Убираем отступы */
        ///    }
        ///    .parent {
        ///        /*margin: 20%;  Отступы вокруг элемента */
        ///        /*background: #fd0;  Цвет фона */
        ///        padding: 10px; /* Поля вокруг текста */
        ///        /*width: 30%
        ///        width: 150px;
        ///        height: 300px;*/
        ///        width: 910px;
        ///    }
        ///    .child {
        ///         /*b [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string roadTypeInfo {
            get {
                return ResourceManager.GetString("roadTypeInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;!DOCTYPE html&gt;
        ///&lt;html lang=&quot;en&quot; xmlns:th=&quot;http://thymeleaf.org&quot;&gt;
        ///&lt;head&gt;
        ///    &lt;meta charset=&quot;UTF-8&quot;&gt;
        ///    &lt;title&gt;Настройки скорости&lt;/title&gt;
        ///&lt;/head&gt;
        ///
        ///&lt;style&gt;
        ///    body {
        ///        margin: 0; /* Убираем отступы */
        ///    }
        ///    .parent {
        ///        /*margin: 20%;  Отступы вокруг элемента */
        ///        /*background: #fd0;  Цвет фона */
        ///        padding: 10px; /* Поля вокруг текста */
        ///        /*width: 30%
        ///        width: 150px;
        ///        height: 300px;*/
        ///        width: 910px;
        ///    }
        ///    .child {
        ///         /*bord [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string speedSettings {
            get {
                return ResourceManager.GetString("speedSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;!DOCTYPE html&gt;
        ///&lt;html lang=&quot;en&quot; xmlns:th=&quot;http://thymeleaf.org&quot;&gt;
        ///&lt;head&gt;
        ///    &lt;meta charset=&quot;UTF-8&quot;&gt;
        ///    &lt;title&gt;Справочная информация&lt;/title&gt;
        ///&lt;/head&gt;
        ///
        ///&lt;style&gt;
        ///    body {
        ///        margin: 0; /* Убираем отступы */
        ///    }
        ///    .parent {
        ///        /*margin: 20%;  Отступы вокруг элемента */
        ///        /*background: #fd0;  Цвет фона */
        ///        padding: 10px; /* Поля вокруг текста */
        ///        /*width: 30%
        ///        width: 150px;
        ///        height: 300px;*/
        ///        width: 910px;
        ///    }
        ///    .child {
        ///         /*b [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string systemInfo {
            get {
                return ResourceManager.GetString("systemInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Tonnel {
            get {
                object obj = ResourceManager.GetObject("Tonnel", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;!DOCTYPE html&gt;
        ///&lt;html lang=&quot;en&quot; xmlns:th=&quot;http://thymeleaf.org&quot;&gt;
        ///&lt;head&gt;
        ///    &lt;meta charset=&quot;UTF-8&quot;&gt;
        ///    &lt;title&gt;Настройки светофора&lt;/title&gt;
        ///&lt;/head&gt;
        ///
        ///&lt;style&gt;
        ///    body {
        ///        margin: 0; /* Убираем отступы */
        ///    }
        ///    .parent {
        ///        /*margin: 20%;  Отступы вокруг элемента */
        ///        /*background: #fd0;  Цвет фона */
        ///        padding: 10px; /* Поля вокруг текста */
        ///        /*width: 30%
        ///        width: 150px;
        ///        height: 300px;*/
        ///        width: 910px;
        ///    }
        ///    .child {
        ///         /*bor [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string trafficLightsSettings {
            get {
                return ResourceManager.GetString("trafficLightsSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Tunnel {
            get {
                object obj = ResourceManager.GetObject("Tunnel", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap большой_поток_авто {
            get {
                object obj = ResourceManager.GetObject("большой_поток_авто", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap главная_форма {
            get {
                object obj = ResourceManager.GetObject("главная_форма", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap малый_поток_авто {
            get {
                object obj = ResourceManager.GetObject("малый_поток_авто", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap работа_знаков_ограничения_скорости {
            get {
                object obj = ResourceManager.GetObject("работа_знаков_ограничения_скорости", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap расстановка_знаков {
            get {
                object obj = ResourceManager.GetObject("расстановка_знаков", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap управление_головным_авто {
            get {
                object obj = ResourceManager.GetObject("управление_головным_авто", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap форма_настройки_интенсивности_потока {
            get {
                object obj = ResourceManager.GetObject("форма_настройки_интенсивности_потока", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap форма_настройки_количества_полос {
            get {
                object obj = ResourceManager.GetObject("форма_настройки_количества_полос", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap форма_настройки_светофорной_фазы {
            get {
                object obj = ResourceManager.GetObject("форма_настройки_светофорной_фазы", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap форма_настройки_скоростного_режима {
            get {
                object obj = ResourceManager.GetObject("форма_настройки_скоростного_режима", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
